name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: windows
            arch: x64
            runner: windows-latest
            runtime: win-x64
            extension: .exe
          - os: windows
            arch: arm64
            runner: windows-latest
            runtime: win-arm64
            extension: .exe
          - os: linux
            arch: x64
            runner: ubuntu-latest
            runtime: linux-x64
            extension: ''
          - os: linux
            arch: arm64
            runner: ubuntu-latest
            runtime: linux-arm64
            extension: ''
          - os: macos
            arch: x64
            runner: macos-latest
            runtime: osx-x64
            extension: ''
          - os: macos
            arch: arm64
            runner: macos-latest
            runtime: osx-arm64
            extension: ''

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build -c Release --no-restore

    - name: Test
      run: dotnet test -c Release --no-build --verbosity normal
      continue-on-error: true

    - name: Publish
      run: dotnet publish -c Release -r ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -o ./publish/${{ matrix.os }}-${{ matrix.arch }}

    - name: Create archive (Windows)
      if: matrix.os == 'windows'
      run: |
        cd publish/${{ matrix.os }}-${{ matrix.arch }}
        7z a ../../WhoReapedWhat-${{ matrix.os }}-${{ matrix.arch }}.zip *

    - name: Create archive (Unix)
      if: matrix.os != 'windows'
      run: |
        cd publish/${{ matrix.os }}-${{ matrix.arch }}
        chmod +x WhoReapedWhat
        tar -czf ../../WhoReapedWhat-${{ matrix.os }}-${{ matrix.arch }}.tar.gz *

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: WhoReapedWhat-${{ matrix.os }}-${{ matrix.arch }}
        path: |
          WhoReapedWhat-${{ matrix.os }}-${{ matrix.arch }}.zip
          WhoReapedWhat-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
        retention-days: 30

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Display structure
      run: ls -la ./artifacts/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./artifacts/**/*
        tag_name: ${{ github.ref_name }}
        name: WhoReapedWhat ${{ github.ref_name }}
        body: |
          ## Changes in ${{ github.ref_name }}
          
          ### Downloads
          - **Windows x64**: WhoReapedWhat-windows-x64.zip
          - **Windows ARM64**: WhoReapedWhat-windows-arm64.zip  
          - **Linux x64**: WhoReapedWhat-linux-x64.tar.gz
          - **Linux ARM64**: WhoReapedWhat-linux-arm64.tar.gz
          - **macOS x64**: WhoReapedWhat-macos-x64.tar.gz
          - **macOS ARM64**: WhoReapedWhat-macos-arm64.tar.gz
          
          ### Installation
          1. Download the appropriate archive for your platform
          2. Extract the files
          3. Create a `config.json` file (see README)
          4. Run the executable
          
          See the [README](README.md) for detailed setup instructions.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
